webpackJsonp([1,104],{367:function(n,s){"use strict";n.exports={content:[["p","\u4f7f\u7528 html \u7684 ",["code","body"]," \u4f5c\u4e3a\u6eda\u52a8\u5bb9\u5668"]],meta:{order:1,title:"body \u5bb9\u5668",filename:"components/list-view/demo/basic-body.md",id:"components-list-view-demo-basic-body"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">/* eslint no-dupe-keys: 0 */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ListView <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u76f8\u7ea6\u9152\u5e97\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u9ea6\u5f53\u52b3\u9080\u60a8\u8fc7\u5468\u672b\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u98df\u60e0\u5468\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> index <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> NUM_ROWS <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListView<span class="token punctuation">.</span>DataSource</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      rowHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>row1<span class="token punctuation">,</span> row2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> row1 <span class="token operator">!==</span> row2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>genData <span class="token operator">=</span> <span class="token punctuation">(</span>pIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> dataBlob <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_ROWS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> ii <span class="token operator">=</span> <span class="token punctuation">(</span>pIndex <span class="token operator">*</span> NUM_ROWS<span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>\n        dataBlob<span class="token punctuation">[</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ii<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token string">`row - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ii<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> dataBlob<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>rData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">genData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      dataSource<span class="token punctuation">:</span> dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRows</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rData<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      isLoading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">onEndReached</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// load new data</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'reach end\'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isLoading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>rData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>rData<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">genData</span><span class="token punctuation">(</span><span class="token operator">++</span>pageIndex<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        dataSource<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRows</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rData<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        isLoading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> separator <span class="token operator">=</span> <span class="token punctuation">(</span>sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sectionID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>rowID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#F5F5F9\'</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        borderTop<span class="token punctuation">:</span> <span class="token string">\'1px solid #ECECED\'</span><span class="token punctuation">,</span>\n        borderBottom<span class="token punctuation">:</span> <span class="token string">\'1px solid #ECECED\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">(</span>rowData<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        index <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">const</span> obj <span class="token operator">=</span> data<span class="token punctuation">[</span>index<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>rowID<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            padding<span class="token punctuation">:</span> <span class="token string">\'0.08rem 0.16rem\'</span><span class="token punctuation">,</span>\n            backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> marginBottom<span class="token punctuation">:</span> <span class="token string">\'0.08rem\'</span><span class="token punctuation">,</span> borderBottom<span class="token punctuation">:</span> <span class="token string">\'1px solid #F6F6F6\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>obj<span class="token punctuation">.</span>title<span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'-webkit-box\'</span><span class="token punctuation">,</span> display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token string">\'1.28rem\'</span><span class="token punctuation">,</span> marginRight<span class="token punctuation">:</span> <span class="token string">\'0.08rem\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>img<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'inline-block\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>des<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> fontSize<span class="token punctuation">:</span> <span class="token string">\'1.6em\'</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string">\'#FF6E27\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>rowID<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\u5143<span class="token operator">/</span>\u4efb\u52a1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderFooter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>div style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isLoading <span class="token operator">?</span> <span class="token string">\'\u52a0\u8f7d\u4e2d...\'</span> <span class="token punctuation">:</span> <span class="token string">\'\u52a0\u8f7d\u5b8c\u6bd5\'</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        renderRow<span class="token operator">=</span><span class="token punctuation">{</span>row<span class="token punctuation">}</span>\n        renderSeparator<span class="token operator">=</span><span class="token punctuation">{</span>separator<span class="token punctuation">}</span>\n        className<span class="token operator">=</span><span class="token string">"am-list"</span>\n        pageSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span>\n        scrollRenderAheadDistance<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">500</span><span class="token punctuation">}</span>\n        scrollEventThrottle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span>\n        onScroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'scroll\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        useBodyScroll\n        onEndReached<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEndReached<span class="token punctuation">}</span>\n        onEndReachedThreshold<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:["pre",{lang:"__react"},["code","/* eslint no-dupe-keys: 0 */\nimport { ListView } from 'antd-mobile';\n\nconst data = [\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n    title: '\u76f8\u7ea6\u9152\u5e97',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n    title: '\u9ea6\u5f53\u52b3\u9080\u60a8\u8fc7\u5468\u672b',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n    title: '\u98df\u60e0\u5468',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n];\nlet index = data.length - 1;\n\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.genData = (pIndex = 0) => {\n      const dataBlob = {};\n      for (let i = 0; i < NUM_ROWS; i++) {\n        const ii = (pIndex * NUM_ROWS) + i;\n        dataBlob[`${ii}`] = `row - ${ii}`;\n      }\n      return dataBlob;\n    };\n    this.rData = this.genData();\n    return {\n      dataSource: dataSource.cloneWithRows(this.rData),\n      isLoading: false,\n    };\n  },\n\n  onEndReached(event) {\n    // load new data\n    console.log('reach end', event);\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.rData = { ...this.rData, ...this.genData(++pageIndex) };\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 1000);\n  },\n\n  render() {\n    const separator = (sectionID, rowID) => (\n      <div key={`${sectionID}-${rowID}`} style={{\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED',\n      }}\n      />\n    );\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n      const obj = data[index--];\n      return (\n        <div key={rowID}\n          style={{\n            padding: '0.08rem 0.16rem',\n            backgroundColor: 'white',\n          }}\n        >\n          <h3 style={{ padding: 2, marginBottom: '0.08rem', borderBottom: '1px solid #F6F6F6' }}>\n            {obj.title}\n          </h3>\n          <div style={{ display: '-webkit-box', display: 'flex' }}>\n            <img style={{ height: '1.28rem', marginRight: '0.08rem' }} src={obj.img} />\n            <div style={{ display: 'inline-block' }}>\n              <p>{obj.des}</p>\n              <p><span style={{ fontSize: '1.6em', color: '#FF6E27' }}>{rowID}</span>\u5143/\u4efb\u52a1</p>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    return (\n      <ListView\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span>header</span>}\n        renderFooter={() => <div style={{ padding: 30, textAlign: 'center' }}>\n          {this.state.isLoading ? '\u52a0\u8f7d\u4e2d...' : '\u52a0\u8f7d\u5b8c\u6bd5'}\n        </div>}\n        renderRow={row}\n        renderSeparator={separator}\n        className=\"am-list\"\n        pageSize={4}\n        scrollRenderAheadDistance={500}\n        scrollEventThrottle={20}\n        onScroll={() => { console.log('scroll'); }}\n        useBodyScroll\n        onEndReached={this.onEndReached}\n        onEndReachedThreshold={10}\n      />\n    );\n  },\n});\n\nReactDOM.render(<Demo />, mountNode);"]]}},368:function(n,s){"use strict";n.exports={content:[["p","\u533a\u5757\u6807\u9898 \u201c\u5438\u9876\u201d(sticky) \u529f\u80fd\u793a\u4f8b"]],meta:{order:2,title:"\u6807\u9898\u5438\u9876\uff08body \u5bb9\u5668\uff09",filename:"components/list-view/demo/basic-sticky.md",id:"components-list-view-demo-basic-sticky"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">/* eslint no-dupe-keys: 0 */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ListView <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u76f8\u7ea6\u9152\u5e97\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u9ea6\u5f53\u52b3\u9080\u60a8\u8fc7\u5468\u672b\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u98df\u60e0\u5468\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> index <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> NUM_SECTIONS <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> NUM_ROWS_PER_SECTION <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> getSectionData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>sectionID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> getRowData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>rowID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListView<span class="token punctuation">.</span>DataSource</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      getRowData<span class="token punctuation">,</span>\n      getSectionHeaderData<span class="token punctuation">:</span> getSectionData<span class="token punctuation">,</span>\n      rowHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>row1<span class="token punctuation">,</span> row2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> row1 <span class="token operator">!==</span> row2<span class="token punctuation">,</span>\n      sectionHeaderHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> s1 <span class="token operator">!==</span> s2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>genData <span class="token operator">=</span> <span class="token punctuation">(</span>pIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_SECTIONS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> ii <span class="token operator">=</span> <span class="token punctuation">(</span>pIndex <span class="token operator">*</span> NUM_SECTIONS<span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> sectionName <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Section </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ii<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">[</span>sectionName<span class="token punctuation">]</span> <span class="token operator">=</span> sectionName<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">[</span>ii<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> jj <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> jj <span class="token operator">&lt;</span> NUM_ROWS_PER_SECTION<span class="token punctuation">;</span> jj<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> rowName <span class="token operator">=</span> <span class="token template-string"><span class="token string">`S</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ii<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, R</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>jj<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rowName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">[</span>rowName<span class="token punctuation">]</span> <span class="token operator">=</span> rowName<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment" spellcheck="true">// new object ref</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">genData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      dataSource<span class="token punctuation">:</span> dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRowsAndSections</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      isLoading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">onEndReached</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// load new data</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'reach end\'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isLoading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">genData</span><span class="token punctuation">(</span><span class="token operator">++</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        dataSource<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRowsAndSections</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        isLoading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> separator <span class="token operator">=</span> <span class="token punctuation">(</span>sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sectionID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>rowID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#F5F5F9\'</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        borderTop<span class="token punctuation">:</span> <span class="token string">\'1px solid #ECECED\'</span><span class="token punctuation">,</span>\n        borderBottom<span class="token punctuation">:</span> <span class="token string">\'1px solid #ECECED\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">(</span>rowData<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        index <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">const</span> obj <span class="token operator">=</span> data<span class="token punctuation">[</span>index<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>rowID<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            padding<span class="token punctuation">:</span> <span class="token string">\'0.08rem 0.16rem\'</span><span class="token punctuation">,</span>\n            backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> marginBottom<span class="token punctuation">:</span> <span class="token string">\'0.08rem\'</span><span class="token punctuation">,</span> borderBottom<span class="token punctuation">:</span> <span class="token string">\'1px solid #F6F6F6\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>obj<span class="token punctuation">.</span>title<span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'-webkit-box\'</span><span class="token punctuation">,</span> display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token string">\'1.28rem\'</span><span class="token punctuation">,</span> marginRight<span class="token punctuation">:</span> <span class="token string">\'0.08rem\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>img<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'inline-block\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>des<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> fontSize<span class="token punctuation">:</span> <span class="token string">\'1.6em\'</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string">\'#FF6E27\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token number">35</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\u5143<span class="token operator">/</span>\u4efb\u52a1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderFooter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>div style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isLoading <span class="token operator">?</span> <span class="token string">\'\u52a0\u8f7d\u4e2d...\'</span> <span class="token punctuation">:</span> <span class="token string">\'\u52a0\u8f7d\u5b8c\u6bd5\'</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        renderSectionHeader<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>sectionData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`\u4efb\u52a1 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sectionData<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        renderRow<span class="token operator">=</span><span class="token punctuation">{</span>row<span class="token punctuation">}</span>\n        renderSeparator<span class="token operator">=</span><span class="token punctuation">{</span>separator<span class="token punctuation">}</span>\n        className<span class="token operator">=</span><span class="token string">"am-list"</span>\n        pageSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span>\n        scrollEventThrottle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span>\n        onScroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'scroll\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onEndReached<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEndReached<span class="token punctuation">}</span>\n        onEndReachedThreshold<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span>\n        stickyHeader\n        stickyProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          stickyStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span> zIndex<span class="token punctuation">:</span> <span class="token number">999</span><span class="token punctuation">,</span> WebkitTransform<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span> transform<span class="token punctuation">:</span> <span class="token string">\'none\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token comment" spellcheck="true">// topOffset: -43,</span>\n          <span class="token comment" spellcheck="true">// isActive: false, // \u5173\u95ed sticky \u6548\u679c</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'
}],preview:["pre",{lang:"__react"},["code","/* eslint no-dupe-keys: 0 */\nimport { ListView } from 'antd-mobile';\n\nconst data = [\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n    title: '\u76f8\u7ea6\u9152\u5e97',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n    title: '\u9ea6\u5f53\u52b3\u9080\u60a8\u8fc7\u5468\u672b',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n    title: '\u98df\u60e0\u5468',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n];\nlet index = data.length - 1;\n\nconst NUM_SECTIONS = 5;\nconst NUM_ROWS_PER_SECTION = 5;\nlet pageIndex = 0;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    this.dataBlob = {};\n    this.sectionIDs = [];\n    this.rowIDs = [];\n    this.genData = (pIndex = 0) => {\n      for (let i = 0; i < NUM_SECTIONS; i++) {\n        const ii = (pIndex * NUM_SECTIONS) + i;\n        const sectionName = `Section ${ii}`;\n        this.sectionIDs.push(sectionName);\n        this.dataBlob[sectionName] = sectionName;\n        this.rowIDs[ii] = [];\n\n        for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n          const rowName = `S${ii}, R${jj}`;\n          this.rowIDs[ii].push(rowName);\n          this.dataBlob[rowName] = rowName;\n        }\n      }\n      // new object ref\n      this.sectionIDs = [].concat(this.sectionIDs);\n      this.rowIDs = [].concat(this.rowIDs);\n    };\n    this.genData();\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections(this.dataBlob, this.sectionIDs, this.rowIDs),\n      isLoading: false,\n    };\n  },\n\n  onEndReached(event) {\n    // load new data\n    console.log('reach end', event);\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.genData(++pageIndex);\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(this.dataBlob, this.sectionIDs, this.rowIDs),\n        isLoading: false,\n      });\n    }, 1000);\n  },\n  render() {\n    const separator = (sectionID, rowID) => (\n      <div key={`${sectionID}-${rowID}`} style={{\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED',\n      }}\n      />\n    );\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n      const obj = data[index--];\n      return (\n        <div key={rowID}\n          style={{\n            padding: '0.08rem 0.16rem',\n            backgroundColor: 'white',\n          }}\n        >\n          <h3 style={{ padding: 2, marginBottom: '0.08rem', borderBottom: '1px solid #F6F6F6' }}>\n            {obj.title}\n          </h3>\n          <div style={{ display: '-webkit-box', display: 'flex' }}>\n            <img style={{ height: '1.28rem', marginRight: '0.08rem' }} src={obj.img} />\n            <div style={{ display: 'inline-block' }}>\n              <p>{obj.des}</p>\n              <p><span style={{ fontSize: '1.6em', color: '#FF6E27' }}>35</span>\u5143/\u4efb\u52a1</p>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    return (\n      <ListView\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span>header</span>}\n        renderFooter={() => <div style={{ padding: 30, textAlign: 'center' }}>\n          {this.state.isLoading ? '\u52a0\u8f7d\u4e2d...' : '\u52a0\u8f7d\u5b8c\u6bd5'}\n        </div>}\n        renderSectionHeader={(sectionData) => (\n          <div>{`\u4efb\u52a1 ${sectionData.split(' ')[1]}`}</div>\n        )}\n        renderRow={row}\n        renderSeparator={separator}\n        className=\"am-list\"\n        pageSize={4}\n        scrollEventThrottle={20}\n        onScroll={() => { console.log('scroll'); }}\n        onEndReached={this.onEndReached}\n        onEndReachedThreshold={10}\n        stickyHeader\n        stickyProps={{\n          stickyStyle: { zIndex: 999, WebkitTransform: 'none', transform: 'none' },\n          // topOffset: -43,\n          // isActive: false, // \u5173\u95ed sticky \u6548\u679c\n        }}\n      />\n    );\n  },\n});\n\nReactDOM.render(<Demo />, mountNode);"]]}},369:function(n,s){"use strict";n.exports={content:[["blockquote",["p","\u6ce8\u610f\uff1a\u9700\u8981\u8bbe\u7f6e ListView \u7684 style \u7684 ",["code","height"],"/",["code","overflow"],"\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u6eda\u52a8\u5bb9\u5668\u3002"],["p","\u540c\u65f6\u5efa\u8bae\u8bbe\u7f6e",["code","body"],"\u7684",["code","overflow: hidden"]]]],meta:{order:0,title:"\u81ea\u5b9a\u4e49\u5bb9\u5668",filename:"components/list-view/demo/basic.md",id:"components-list-view-demo-basic"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">/* eslint no-dupe-keys: 0, no-mixed-operators: 0 */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ListView <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u76f8\u7ea6\u9152\u5e97\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u9ea6\u5f53\u52b3\u9080\u60a8\u8fc7\u5468\u672b\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    img<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'\u98df\u60e0\u5468\'</span><span class="token punctuation">,</span>\n    des<span class="token punctuation">:</span> <span class="token string">\'\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> index <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> NUM_SECTIONS <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> NUM_ROWS_PER_SECTION <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> getSectionData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>sectionID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> getRowData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>rowID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListView<span class="token punctuation">.</span>DataSource</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      getRowData<span class="token punctuation">,</span>\n      getSectionHeaderData<span class="token punctuation">:</span> getSectionData<span class="token punctuation">,</span>\n      rowHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>row1<span class="token punctuation">,</span> row2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> row1 <span class="token operator">!==</span> row2<span class="token punctuation">,</span>\n      sectionHeaderHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> s1 <span class="token operator">!==</span> s2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>genData <span class="token operator">=</span> <span class="token punctuation">(</span>pIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_SECTIONS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> ii <span class="token operator">=</span> <span class="token punctuation">(</span>pIndex <span class="token operator">*</span> NUM_SECTIONS<span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> sectionName <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Section </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ii<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">[</span>sectionName<span class="token punctuation">]</span> <span class="token operator">=</span> sectionName<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">[</span>ii<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> jj <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> jj <span class="token operator">&lt;</span> NUM_ROWS_PER_SECTION<span class="token punctuation">;</span> jj<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> rowName <span class="token operator">=</span> <span class="token template-string"><span class="token string">`S</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ii<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, R</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>jj<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rowName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">[</span>rowName<span class="token punctuation">]</span> <span class="token operator">=</span> rowName<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment" spellcheck="true">// new object ref</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">genData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      dataSource<span class="token punctuation">:</span> dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRowsAndSections</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      isLoading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">onEndReached</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// load new data</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'reach end\'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isLoading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">genData</span><span class="token punctuation">(</span><span class="token operator">++</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        dataSource<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRowsAndSections</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataBlob<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sectionIDs<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rowIDs<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        isLoading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> separator <span class="token operator">=</span> <span class="token punctuation">(</span>sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sectionID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>rowID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#F5F5F9\'</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        borderTop<span class="token punctuation">:</span> <span class="token string">\'1px solid #ECECED\'</span><span class="token punctuation">,</span>\n        borderBottom<span class="token punctuation">:</span> <span class="token string">\'1px solid #ECECED\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">(</span>rowData<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        index <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">const</span> obj <span class="token operator">=</span> data<span class="token punctuation">[</span>index<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>rowID<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            padding<span class="token punctuation">:</span> <span class="token string">\'0.08rem 0.16rem\'</span><span class="token punctuation">,</span>\n            backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> marginBottom<span class="token punctuation">:</span> <span class="token string">\'0.08rem\'</span><span class="token punctuation">,</span> borderBottom<span class="token punctuation">:</span> <span class="token string">\'1px solid #F6F6F6\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>obj<span class="token punctuation">.</span>title<span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'-webkit-box\'</span><span class="token punctuation">,</span> display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token string">\'1.28rem\'</span><span class="token punctuation">,</span> marginRight<span class="token punctuation">:</span> <span class="token string">\'0.08rem\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>img<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'inline-block\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>des<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> fontSize<span class="token punctuation">:</span> <span class="token string">\'1.6em\'</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string">\'#FF6E27\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token number">35</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\u5143<span class="token operator">/</span>\u4efb\u52a1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token punctuation">:</span> <span class="token string">\'0 auto\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token string">\'96%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderFooter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>div style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isLoading <span class="token operator">?</span> <span class="token string">\'\u52a0\u8f7d\u4e2d...\'</span> <span class="token punctuation">:</span> <span class="token string">\'\u52a0\u8f7d\u5b8c\u6bd5\'</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        renderSectionHeader<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>sectionData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`\u4efb\u52a1 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sectionData<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        renderRow<span class="token operator">=</span><span class="token punctuation">{</span>row<span class="token punctuation">}</span>\n        renderSeparator<span class="token operator">=</span><span class="token punctuation">{</span>separator<span class="token punctuation">}</span>\n        className<span class="token operator">=</span><span class="token string">"fortest"</span>\n        style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          height<span class="token punctuation">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span>\n          overflow<span class="token punctuation">:</span> <span class="token string">\'auto\'</span><span class="token punctuation">,</span>\n          border<span class="token punctuation">:</span> <span class="token string">\'1px solid #ddd\'</span><span class="token punctuation">,</span>\n          margin<span class="token punctuation">:</span> <span class="token string">\'0.1rem 0\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        pageSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span>\n        scrollRenderAheadDistance<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">500</span><span class="token punctuation">}</span>\n        scrollEventThrottle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span>\n        onScroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'scroll\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onEndReached<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEndReached<span class="token punctuation">}</span>\n        onEndReachedThreshold<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'
}],preview:["pre",{lang:"__react"},["code","/* eslint no-dupe-keys: 0, no-mixed-operators: 0 */\nimport { ListView } from 'antd-mobile';\n\nconst data = [\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n    title: '\u76f8\u7ea6\u9152\u5e97',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n    title: '\u9ea6\u5f53\u52b3\u9080\u60a8\u8fc7\u5468\u672b',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n    title: '\u98df\u60e0\u5468',\n    des: '\u4e0d\u662f\u6240\u6709\u7684\u517c\u804c\u6c6a\u90fd\u9700\u8981\u98ce\u5439\u65e5\u6652',\n  },\n];\nlet index = data.length - 1;\n\nconst NUM_SECTIONS = 5;\nconst NUM_ROWS_PER_SECTION = 5;\nlet pageIndex = 0;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    this.dataBlob = {};\n    this.sectionIDs = [];\n    this.rowIDs = [];\n    this.genData = (pIndex = 0) => {\n      for (let i = 0; i < NUM_SECTIONS; i++) {\n        const ii = (pIndex * NUM_SECTIONS) + i;\n        const sectionName = `Section ${ii}`;\n        this.sectionIDs.push(sectionName);\n        this.dataBlob[sectionName] = sectionName;\n        this.rowIDs[ii] = [];\n\n        for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n          const rowName = `S${ii}, R${jj}`;\n          this.rowIDs[ii].push(rowName);\n          this.dataBlob[rowName] = rowName;\n        }\n      }\n      // new object ref\n      this.sectionIDs = [].concat(this.sectionIDs);\n      this.rowIDs = [].concat(this.rowIDs);\n    };\n    this.genData();\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections(this.dataBlob, this.sectionIDs, this.rowIDs),\n      isLoading: false,\n    };\n  },\n\n  onEndReached(event) {\n    // load new data\n    console.log('reach end', event);\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.genData(++pageIndex);\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(this.dataBlob, this.sectionIDs, this.rowIDs),\n        isLoading: false,\n      });\n    }, 1000);\n  },\n\n  render() {\n    const separator = (sectionID, rowID) => (\n      <div key={`${sectionID}-${rowID}`} style={{\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED',\n      }}\n      />\n    );\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n      const obj = data[index--];\n      return (\n        <div key={rowID}\n          style={{\n            padding: '0.08rem 0.16rem',\n            backgroundColor: 'white',\n          }}\n        >\n          <h3 style={{ padding: 2, marginBottom: '0.08rem', borderBottom: '1px solid #F6F6F6' }}>\n            {obj.title}\n          </h3>\n          <div style={{ display: '-webkit-box', display: 'flex' }}>\n            <img style={{ height: '1.28rem', marginRight: '0.08rem' }} src={obj.img} />\n            <div style={{ display: 'inline-block' }}>\n              <p>{obj.des}</p>\n              <p><span style={{ fontSize: '1.6em', color: '#FF6E27' }}>35</span>\u5143/\u4efb\u52a1</p>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    return (<div style={{ margin: '0 auto', width: '96%' }}>\n      <ListView\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span>header</span>}\n        renderFooter={() => <div style={{ padding: 30, textAlign: 'center' }}>\n          {this.state.isLoading ? '\u52a0\u8f7d\u4e2d...' : '\u52a0\u8f7d\u5b8c\u6bd5'}\n        </div>}\n        renderSectionHeader={(sectionData) => (\n          <div>{`\u4efb\u52a1 ${sectionData.split(' ')[1]}`}</div>\n        )}\n        renderRow={row}\n        renderSeparator={separator}\n        className=\"fortest\"\n        style={{\n          height: document.body.clientHeight * 3 / 4,\n          overflow: 'auto',\n          border: '1px solid #ddd',\n          margin: '0.1rem 0',\n        }}\n        pageSize={4}\n        scrollRenderAheadDistance={500}\n        scrollEventThrottle={20}\n        onScroll={() => { console.log('scroll'); }}\n        onEndReached={this.onEndReached}\n        onEndReachedThreshold={10}\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<Demo />, mountNode);"]]}},370:function(n,s){"use strict";n.exports={content:[["p","\u7528\u4e8e\u901a\u8baf\u8584\u7b49\u573a\u666f \u201c\u5438\u9876\u201d(sticky)"]],meta:{order:4,title:"\u7d22\u5f15\u5217\u8868\uff08\u6807\u9898\u5438\u9876\uff09",filename:"components/list-view/demo/idxed-sticky.md",id:"components-list-view-demo-idxed-sticky"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> province <span class="token keyword">as</span> provinceData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile-demo-data\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ListView<span class="token punctuation">,</span> List<span class="token punctuation">,</span> SearchBar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Item <span class="token punctuation">}</span> <span class="token operator">=</span> List<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> getSectionData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>sectionID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> getRowData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>rowID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListView<span class="token punctuation">.</span>DataSource</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      getRowData<span class="token punctuation">,</span>\n      getSectionHeaderData<span class="token punctuation">:</span> getSectionData<span class="token punctuation">,</span>\n      rowHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>row1<span class="token punctuation">,</span> row2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> row1 <span class="token operator">!==</span> row2<span class="token punctuation">,</span>\n      sectionHeaderHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> s1 <span class="token operator">!==</span> s2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>createDs <span class="token operator">=</span> <span class="token punctuation">(</span>ds<span class="token punctuation">,</span> province<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> dataBlob <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> sectionIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> rowIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>province<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        sectionIDs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dataBlob<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>\n        rowIDs<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        province<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>jj <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n          rowIDs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>jj<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          dataBlob<span class="token punctuation">[</span>jj<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token operator">=</span> jj<span class="token punctuation">.</span>label<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> ds<span class="token punctuation">.</span><span class="token function">cloneWithRowsAndSections</span><span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionIDs<span class="token punctuation">,</span> rowIDs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      inputValue<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n      dataSource<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDs</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">,</span> provinceData<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      headerPressCount<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">onSearch</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> pd <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>provinceData <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>pd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      pd<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>jj <span class="token operator">=</span><span class="token operator">></span> jj<span class="token punctuation">.</span>spell<span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      inputValue<span class="token punctuation">:</span> val<span class="token punctuation">,</span>\n      dataSource<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDs</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">,</span> pd<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> paddingTop<span class="token punctuation">:</span> <span class="token string">\'0.88rem\'</span><span class="token punctuation">,</span> position<span class="token punctuation">:</span> <span class="token string">\'relative\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> position<span class="token punctuation">:</span> <span class="token string">\'absolute\'</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SearchBar</span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>inputValue<span class="token punctuation">}</span></span>\n          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>\u641c\u7d22<span class="token punctuation">"</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onSearch<span class="token punctuation">}</span></span>\n          <span class="token attr-name">onClear</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'onClear\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'onCancel\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.IndexedList</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\u5934\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderFooter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\u5c3e\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderSectionHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>sectionData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>sectionData<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderRow</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>rowData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Item</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>rowData<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Item</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>am-list<span class="token punctuation">"</span></span>\n        <span class="token attr-name">stickyHeader</span>\n        <span class="token attr-name">stickyProps</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          stickyStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span> zIndex<span class="token punctuation">:</span> <span class="token number">999</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span></span><span class="token attr-name">}</span>\n        <span class="token attr-name">quickSearchBarStyle</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          top<span class="token punctuation">:</span> <span class="token number">85</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">delayTime</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">delayActivityIndicator</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>div style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\u6e32\u67d3\u4e2d<span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:["pre",{lang:"__react"},["code","import { province as provinceData } from 'antd-mobile-demo-data';\nimport { ListView, List, SearchBar } from 'antd-mobile';\n\nconst { Item } = List;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    this.createDs = (ds, province) => {\n      const dataBlob = {};\n      const sectionIDs = [];\n      const rowIDs = [];\n      Object.keys(province).forEach((item, index) => {\n        sectionIDs.push(item);\n        dataBlob[item] = item;\n        rowIDs[index] = [];\n\n        province[item].forEach(jj => {\n          rowIDs[index].push(jj.value);\n          dataBlob[jj.value] = jj.label;\n        });\n      });\n      return ds.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs);\n    };\n    return {\n      inputValue: '',\n      dataSource: this.createDs(dataSource, provinceData),\n      headerPressCount: 0,\n    };\n  },\n\n  onSearch(val) {\n    const pd = { ...provinceData };\n    Object.keys(pd).forEach((item) => {\n      pd[item] = pd[item].filter(jj => jj.spell.toLocaleLowerCase().indexOf(val) > -1);\n    });\n    this.setState({\n      inputValue: val,\n      dataSource: this.createDs(this.state.dataSource, pd),\n    });\n  },\n\n  render() {\n    return (<div style={{ paddingTop: '0.88rem', position: 'relative' }}>\n      <div style={{ position: 'absolute', top: 0, left: 0, right: 0 }}>\n        <SearchBar\n          value={this.state.inputValue}\n          placeholder=\"\u641c\u7d22\"\n          onChange={this.onSearch}\n          onClear={() => { console.log('onClear'); }}\n          onCancel={() => { console.log('onCancel'); }}\n        />\n      </div>\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span>\u5934\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49</span>}\n        renderFooter={() => <span>\u5c3e\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49</span>}\n        renderSectionHeader={(sectionData) => (<div>{sectionData}</div>)}\n        renderRow={(rowData) => (<Item>{rowData}</Item>)}\n        className=\"am-list\"\n        stickyHeader\n        stickyProps={{\n          stickyStyle: { zIndex: 999 },\n        }}\n        quickSearchBarStyle={{\n          top: 85,\n        }}\n        delayTime={10}\n        delayActivityIndicator={<div style={{ padding: 25, textAlign: 'center' }}>\u6e32\u67d3\u4e2d...</div>}\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<Demo />, mountNode);"]]}},371:function(n,s){"use strict";n.exports={content:[["p","\u7528\u4e8e\u901a\u8baf\u8584\u7b49\u573a\u666f"]],meta:{order:3,title:"\u7d22\u5f15\u5217\u8868",filename:"components/list-view/demo/idxed.md",id:"components-list-view-demo-idxed"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">/* eslint no-mixed-operators: 0 */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> province <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile-demo-data\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ListView<span class="token punctuation">,</span> List <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd-mobile\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Item <span class="token punctuation">}</span> <span class="token operator">=</span> List<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> getSectionData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>sectionID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> getRowData <span class="token operator">=</span> <span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionID<span class="token punctuation">,</span> rowID<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> dataBlob<span class="token punctuation">[</span>rowID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListView<span class="token punctuation">.</span>DataSource</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      getRowData<span class="token punctuation">,</span>\n      getSectionHeaderData<span class="token punctuation">:</span> getSectionData<span class="token punctuation">,</span>\n      rowHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>row1<span class="token punctuation">,</span> row2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> row1 <span class="token operator">!==</span> row2<span class="token punctuation">,</span>\n      sectionHeaderHasChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> s1 <span class="token operator">!==</span> s2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> dataBlob <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> sectionIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rowIDs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>province<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      sectionIDs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      dataBlob<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>\n      rowIDs<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n      province<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>jj <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        rowIDs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>jj<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dataBlob<span class="token punctuation">[</span>jj<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token operator">=</span> jj<span class="token punctuation">.</span>label<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      dataSource<span class="token punctuation">:</span> dataSource<span class="token punctuation">.</span><span class="token function">cloneWithRowsAndSections</span><span class="token punctuation">(</span>dataBlob<span class="token punctuation">,</span> sectionIDs<span class="token punctuation">,</span> rowIDs<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      headerPressCount<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.IndexedList</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\u5934\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderFooter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\u5c3e\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderSectionHeader</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>sectionData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>sectionData<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">renderRow</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>rowData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Item</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>rowData<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Item</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fortest<span class="token punctuation">"</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          height<span class="token punctuation">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span>\n          overflow<span class="token punctuation">:</span> <span class="token string">\'auto\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">quickSearchBarStyle</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          position<span class="token punctuation">:</span> <span class="token string">\'absolute\'</span><span class="token punctuation">,</span>\n          top<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">delayTime</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">delayActivityIndicator</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>div style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\u6e32\u67d3\u4e2d<span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'
}],preview:["pre",{lang:"__react"},["code","/* eslint no-mixed-operators: 0 */\nimport { province } from 'antd-mobile-demo-data';\nimport { ListView, List } from 'antd-mobile';\n\nconst { Item } = List;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    const dataBlob = {};\n    const sectionIDs = [];\n    const rowIDs = [];\n    Object.keys(province).forEach((item, index) => {\n      sectionIDs.push(item);\n      dataBlob[item] = item;\n      rowIDs[index] = [];\n\n      province[item].forEach(jj => {\n        rowIDs[index].push(jj.value);\n        dataBlob[jj.value] = jj.label;\n      });\n    });\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs),\n      headerPressCount: 0,\n    };\n  },\n\n  render() {\n    return (\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span>\u5934\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49</span>}\n        renderFooter={() => <span>\u5c3e\u90e8\u5185\u5bb9\u8bf7\u81ea\u5b9a\u4e49</span>}\n        renderSectionHeader={(sectionData) => (<div>{sectionData}</div>)}\n        renderRow={(rowData) => (<Item>{rowData}</Item>)}\n        className=\"fortest\"\n        style={{\n          height: document.body.clientHeight * 3 / 4,\n          overflow: 'auto',\n        }}\n        quickSearchBarStyle={{\n          position: 'absolute',\n          top: 20,\n        }}\n        delayTime={10}\n        delayActivityIndicator={<div style={{ padding: 25, textAlign: 'center' }}>\u6e32\u67d3\u4e2d...</div>}\n      />\n    );\n  },\n});\n\nReactDOM.render(<Demo />, mountNode);"]]}},552:function(n,s,a){n.exports={"basic-body":a(367),"basic-sticky":a(368),basic:a(369),"idxed-sticky":a(370),idxed:a(371)}}});